# Log in to Docker Hub (default registry) or a custom registry
docker login [registry_url]    # Log in to the specified Docker registry
# Example for Docker Hub
docker login
# Example for custom registry
docker login myregistry.com

# Log out from Docker Hub (default registry) or a custom registry
docker logout [registry_url]   # Log out from the specified Docker registry
# Example for Docker Hub
docker logout
# Example for custom registry
docker logout myregistry.com

# Pull an image from a Docker registry
docker pull [registry_url]/[repository_name]:[tag]  # Pull image from the specified registry
# Example for Docker Hub
docker pull ubuntu:latest
# Example for custom registry
docker pull myregistry.com/myrepo/myimage:latest

# Push an image to a Docker registry
docker push [registry_url]/[repository_name]:[tag]  # Push image to the specified registry
# Example for Docker Hub
docker push myrepo/myimage:latest
# Example for custom registry
docker push myregistry.com/myrepo/myimage:latest

# List all images on the local machine (including those tagged for specific registries)
docker image ls  # List local images

# Tag an image for a specific registry
docker image tag [local_image_name]:[tag] [registry_url]/[repository_name]:[tag]  # Tag image for the specified registry
# Example
docker image tag myimage:latest myregistry.com/myrepo/myimage:latest

# Remove an image from a local registry
docker image rm [image_name]:[tag]  # Remove image from the local Docker registry
# Example
docker image rm myrepo/myimage:latest

# Create a new Docker registry container
docker container -d -p 5000:5000 --name registry registry:2  # Run a local Docker registry on port 5000

# Tag an image for a local Docker registry
docker image tag my_image localhost:5000/my_image  # Tag the image for local registry

# Push an image to a local Docker registry
docker push localhost:5000/my_image  # Push the image to the local registry

# Pull an image from a local Docker registry
docker pull localhost:5000/my_image  # Pull the image from the local registry

# Delete an image from a local Docker registry
docker image rm localhost:5000/my_image  # Remove the image from the local registry

# Create a password file with a user for basic authentication
htpasswd -c /path/to/htpasswd username  # Create and set password for user

# Run a local Docker registry with basic authentication enabled
docker run -d -p 5000:5000 --name registry \
  -v /path/to/htpasswd:/etc/registry/htpasswd \
  -v /path/to/registry:/var/lib/registry \
  -e REGISTRY_AUTH=htpasswd \
  -e REGISTRY_AUTH_HTPASSWD_PATH=/etc/registry/htpasswd \
  registry:2  # Run registry with basic auth

# Generate a self-signed SSL certificate and key
openssl req -newkey rsa:4096 -nodes -keyout /path/to/certs/registry.key -x509 -days 365 -out /path/to/certs/registry.crt  # Create self-signed cert

# Run a local Docker registry with SSL/TLS enabled
docker run -d -p 443:443 --name registry \
  -v /path/to/certs:/certs \
  -v /path/to/registry:/var/lib/registry \
  -e REGISTRY_HTTP_SECRET=mysecret \
  -e REGISTRY_HTTP_HEADERS={"X-Content-Type-Options: nosniff"} \
  -e REGISTRY_HTTP_SECRET=mysecret \
  registry:2  # Run registry with SSL/TLS

# Configure Docker to trust the registry's certificate
mkdir -p /etc/docker/certs.d/localhost:443  # Create certs directory for Docker
cp /path/to/certs/registry.crt /etc/docker/certs.d/localhost:443/ca.crt  # Copy cert to Docker's trust directory
sudo systemctl restart docker  # Restart Docker to apply changes

# Log in to the local registry with basic authentication
docker login localhost:443 -u username -p password  # Log in with credentials

# Pull an image from the local registry
docker pull localhost:443/my_image  # Pull image from local registry

# Tag an image for the local registry
docker tag my_image localhost:443/my_image  # Tag image for local registry

# Push the image to the local registry
docker push localhost:443/my_image  # Push image to local registry
